{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Final Data Preparation\"\nauthor: \"Nicole Barker\"\ndate: \"Last run: Jan 9, 2018\" \noutput: \n  word_document:\n    reference_docx: ../styles/ReportFormat_1.docx\n---\n\n## Script Abstract\n\n## Background\nIn previous steps: \n\n* I added offsets into the table\n* I filtered dates based on mismatch between VRI data and bird surveys\n* I expect to filter based on proximity of point count to stand edge once that data is available. NOT CURRENTLY DONE. \n\nHowever, I still need to do a bit more data processing before I can do analyses. \n\nIn this script: \n\n* Subset to desired behaviours\n* I sum across species to develop a total bird count per survey \n\n\n**I may also:**\n\n* Explore relationships between project (PCODE) and apparent total bird count\n\n\n``` {r setup, echo=F, message=F, warning=F}\nrequire(knitr)\nopts_knit$set(root.dir = '..')\nknitr::opts_chunk$set(\n  fig.path = \"figures/\"\n)\n```\n\n``` {r load.project, message=F}\nrequire(ProjectTemplate)\nload.project()\noptions(digits=12)\n```\n\n### Load intersected bird data, combine with methods, and subset to columns needed for exploration of bird counts per different survey methods\n\n``` {r}\nload(\"cache/vri_bird_tempaligned.RData\") #(PKEYs quality-checked for use)\ncolnames(vri_bird_tempaligned)\n#load(\"cache/vri_bird_tempaligned-distfiltered.RData\") # this doesn't exist yet\n\nbirddat1 <- read.csv(\"data/birddata_preprocess1.csv\", header=T)\ncolnames(birddat1)\ncolnames(birddat1)[which(colnames(birddat1) == \"PCODE_derived\")] <- \"PCODE\"\ncolnames(birddat1)[which(colnames(birddat1) == \"SS_derived\")] <- \"SS\"\n\nload(\"cache/offsets_all.RData\")\n\nbirddat <- merge(vri_bird_tempaligned[c(\"PKEY\")], birddat1[c(\"PKEY\", \"YYYY\", \"ROUND\", \"SPECIES\", \"BEH\", \"METHOD\", \"MaxDuration\", \"Maxdist\", \"ABUND\")], by=\"PKEY\", all.x=T)\nbirddat <- merge(birddat, offsets_all, by=\"PKEY\", all.x=T)\n```\n\n### Subset to desired behaviours \n\nFollowing Peter Solymos's guidelines (https://github.com/psolymos/bamanalytics/blob/master/R/dataprocessing.R) and keeping behaviours 1, 6, and 11. See table below for definitions. \n\n``` {r}\nt.behav <- data.frame(table(birddat$BEH))\ncolnames(t.behav) <- c(\"behcode\", \"NumObservations\")\n\nlookup.behav <- read.csv(\"data/LOOKUP.BehaviourCodes.csv\", header=T)\nlookup.behav <- lookup.behav[order(lookup.behav$behcode),]\n\nt.behav <- merge(lookup.behav, t.behav, all=T)\nt.behav$NumObservations[is.na(t.behav$NumObservations)] <- 0\nkable(t.behav, row.names=F)\n\nbirddat2 <- birddat[birddat$BEH %in% c(\"1\", \"6\", \"11\"),]\n```\n\n``` {r}\nbirddat3 <- birddat2[c(\"METHOD\", \"PKEY\", \"YYYY\", \"SPECIES\", \"BEH\", \"ABUND\", \"MaxDuration\", \"Maxdist\", \"ROUND\", \"Offset_simple\", \"Exposure_simple\", \"OFFSET\")]\n```\n\n#### Reclass methods to the subset I would use as factors in subsequent analyses\n\n``` {r, eval=T}\n#distanceClass <- data.frame(Maxdist=unique(birddat3$Maxdist), distanceClass=c(\"unlimited\", \"80-100\", \"80-100\", \"50\"))\ndistanceClass <- data.frame(Maxdist=unique(birddat3$Maxdist), distanceClass=c(\"unlimited\", \"80-100\", \"50\"))\n\n#durationClass <- data.frame(MaxDuration=unique(birddat3$MaxDuration), durationClass=c(\"3\", \"5-6\", \"8-10\", \"8-10\", \"5-6\"))\ndurationClass <- data.frame(MaxDuration=unique(birddat3$MaxDuration), durationClass=c(\"5-6\", \"8-10\", \"5-6\"))\n\nbirddat3.5 <- merge(birddat3, distanceClass, by=\"Maxdist\", all.x=T)\nbirddat3.5 <- merge(birddat3.5, durationClass, by=\"MaxDuration\", all.x=T)\ncolnames(birddat3.5)\nrm(birddat3)\n```\n\n### Aggregate to \"total bird\" count per survey instance\n\n##### Add English names in addition to  CODES\n\n``` {r}\ncodes <- read.csv(\"data/EC_AVIAN_CORE_20150324.csv\")\ncolnames(codes)[which(colnames(codes)==\"Species_ID\")] <- \"SPECIES\"\n\n#merge species names into point count dataset\nbirddat4 <- merge(birddat3.5, codes, by=\"SPECIES\", all.x=T)\n\n#subset for necessary columns\nbirddat4 <- birddat4[c(colnames(birddat3.5), \"English_Name\")]\n```\n\n##### Cut any problematic English names\n\n``` {r}\nunique(birddat4[is.na(birddat4$English_Name),]$SPECIES)\n\nbirddat4 <- birddat4[birddat4$SPECIES != \"NONE\",]\n```\n\n#### Aggregate\n\n``` {r}\nsumABUND <- aggregate(birddat4$ABUND,  by=list(PKEY=birddat4$PKEY), FUN=sum)\ncolnames(sumABUND)[2] <- \"sumABUND\"\n\nspeciesCOUNT <- aggregate(birddat4$ABUND,  by=list(PKEY=birddat4$PKEY), FUN=length) \ncolnames(speciesCOUNT)[2] <- \"speciesCOUNT\"\n\ntmp <- merge(sumABUND, speciesCOUNT, by=\"PKEY\")\n\nbirddat5 <- merge(tmp, birddat4[c(\"PKEY\", \"METHOD\", \"YYYY\", \"MaxDuration\", \"Maxdist\", \"durationClass\", \"distanceClass\", \"Exposure_simple\", \"Offset_simple\", \"OFFSET\")], by=\"PKEY\")\n``` \n\n**Re-derive PCODE and SS from PKEY**\n\n``` {r}\nbirddat5$PCODE_derived <- unlist(lapply(strsplit(as.character(birddat5$PKEY), \":\", fixed=T), function(x) {x[1]}))\nbirddat5$SS_derived <- unlist(lapply(strsplit(as.character(birddat5$PKEY), \":\", fixed=T), function(x) {paste(x[1:3], collapse=\":\")}))\n\nbirddat5 <- birddat5[!duplicated(birddat5$PKEY),]\n```\n\n### Combine bird data with VRI data\n\n``` {r}\nnrow(vri_bird_tempaligned)\nlength(unique(vri_bird_tempaligned$PKEY))\n\nbird_vri_dat_ready <- merge(birddat5, vri_bird_tempaligned[-which(colnames(vri_bird_tempaligned) %in% c(\"FID_BIRD\", \"VRIintersectLayer\", \"OBJECTID\", \"FID_VRI\", \"BirdLayer\", \"MAP_ID\", \"POLYGON_ID\", \"OPENING_IND\", \"OPENING_SOURCE\", \"POLYGON_AREA\", \"INPUT_DATE\", \"INTERPRETATION_DATE\", \"REFERENCE_YEAR\", \"ATTRIBUTION_BASE_DATE\", \"PROJECTED_DATE\", \"OPENING_ID\", \"ORG_UNIT_NO\", \"ORG_UNIT_CODE\", \"FD_PERCENT\", \"PL_PERCENT\", \"AT_PERCENT\", \"VRI.layer.polygon.ID\",  \"ToleratedLag\", \"LagExceedsTolerated\", \"VRI.layer.polygon.ID.PKEY\", \"YYYY\", \"SS\", \"Offset\", \"Exposure\"))], by=\"PKEY\", all.x=T)\nbird_vri_dat_ready$ForID <- with(bird_vri_dat_ready, paste(BecZone, SpeciesGroup, Age, Height, sep=\".\"))\nbird_vri_dat_ready <- bird_vri_dat_ready[sort(colnames(bird_vri_dat_ready))]\n\nkable(bird_vri_dat_ready[sample(nrow(bird_vri_dat_ready), 10), c(\"ForID\", \"BecZone\", \"SpeciesGroup\", \"Age\", \"Height\", \"AgeClass_calc\", \"HeightClass_calc\", \"DisturbanceYear\", \"speciesCOUNT\", \"sumABUND\")])\n```\n\n### Check if offsets are the same within a given survey method\n\n* The following list should have only one value per list item if I'm using the simpler method of calculate offsets\n    * It will have multiple values if I\"m using the more complex approach\n* Each list item represents a different method\n\n``` {r}\nmethods <- unique(bird_vri_dat_ready$METHOD)\n\n## function to look at unique offsets within a given method. Should have one value per row/method.\nlapply(methods, function(x) {\n  unique(bird_vri_dat_ready[bird_vri_dat_ready$METHOD == x,]$Offset_simple)\n})\n\nlapply(methods, function(x) {\n  unique(bird_vri_dat_ready[bird_vri_dat_ready$METHOD == x,]$OFFSET)\n})\n```\n\n``` {r}\ncache(\"bird_vri_dat_ready\")\n```",
    "created" : 1515542455414.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2165123184",
    "id" : "4E2C9043",
    "lastKnownWriteTime" : 1515508984,
    "last_content_update" : 1515508984,
    "path" : "C:/Users/Nicole/Dropbox/BAM/Research/MB Matrix.BC VRI models/Analysis 2017 summer/NBarker.BCVRImodels/munge/03.01.FinalDataPrep.Rmd",
    "project_path" : "munge/03.01.FinalDataPrep.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}